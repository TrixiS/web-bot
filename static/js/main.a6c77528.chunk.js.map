{"version":3,"sources":["lib/useFetcher.ts","components/Button.tsx","components/Layout.tsx","icons.tsx","components/TextField.tsx","components/Page.tsx","components/LogsPage.tsx","components/LoadingScreen.tsx","components/Input.tsx","components/DictInput.tsx","components/SchemaPage.tsx","components/Dropdown.tsx","App.tsx","index.tsx"],"names":["fetcher","input","args","fetch","then","res","json","useFetcher","route","useSWRConfiguration","useSWR","data","error","rest","isLoading","Button","className","children","icon","SidebarHideItem","SidebarItem","SidebarLogo","Sidebar","logo","Header","Content","SidebarLink","to","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","configIcon","phrasesIcon","removeIcon","plusIcon","arrowRightIcon","circleIcon","cx","cy","r","documentIcon","downloadIcon","fillRule","clipRule","trashIcon","TextField","onDownload","onDelete","onClick","PageTitle","Page","title","LogsPage","logsData","apiUrl","refreshInterval","handleDownload","a","fileLink","document","createElement","url","window","URL","createObjectURL","Blob","text","href","setAttribute","click","parentNode","removeChild","value","readOnly","rows","method","LoadingScreen","Input","React","props","ref","DictInput","removeButtonProps","appendButtonProps","onChange","defaultValue","Object","entries","values","setValues","object","pair","key","undefined","changePair","pairIndex","valueIndex","v","valuesCopy","map","index","RemoveButton","remove","splice","type","e","target","AppendButton","append","Array","plainInputTypes","string","integer","number","boolean","Field","buttonClassName","ArrayField","useFieldArrayProps","register","property","schemaProperty","useFieldArray","fields","length","shouldFocus","field","fieldIndex","id","name","required","ObjectField","render","NestedObjectField","SchemaPage","schema","formProps","onSave","useForm","control","handleSubmit","onSubmit","entry","plainType","placeholder","default","toString","defaultChecked","valueAsNumber","Dropdown","buttonProps","mirror","menuVisible","setMenuVisible","menuRef","addEventListener","closeMenu","removeEventListener","itemClick","current","contains","transform","style","preventDefault","visible","child","childIndex","DropdownItem","disabled","itemClassName","BotState","pageIcons","config","phrases","botStateColors","ready","loading","stopped","App","configSchema","configData","mutateConfigData","mutate","phrasesData","mutatePhrasesData","botStatus","mutateBotStatus","useEffect","eventSource","EventSource","JSON","parse","status","close","properties","logs","bot","bot_start","bot_reload","bot_kill","nameCapital","charAt","toUpperCase","slice","definitions","keys","dataValue","handleSave","inputData","body","stringify","headers","errorMessage","detail","msg","alert","config_error_alert","path","save","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a6c77528.chunk.js","sourcesContent":["import useSWR, { SWRResponse } from \"swr\";\r\nimport { Configuration } from \"swr/dist/types\";\r\n\r\nconst fetcher = (input: any, ...args: any[]) =>\r\n  fetch(input, ...args).then((res) => res.json());\r\n\r\nexport default function useFetcher<Data = any, Error = any>(\r\n  route: string,\r\n  useSWRConfiguration?: Partial<Configuration<Data, Error>>\r\n): UseFetcherResponse<Data, Error> {\r\n  const { data, error, ...rest } = useSWR<Data, Error>(\r\n    route,\r\n    fetcher,\r\n    useSWRConfiguration\r\n  );\r\n\r\n  return {\r\n    data,\r\n    isLoading: !error && !data,\r\n    ...rest,\r\n  };\r\n}\r\n\r\nexport interface UseFetcherResponse<Data, Error>\r\n  extends SWRResponse<Data, Error> {\r\n  isLoading: boolean;\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport default function Button({\r\n  className,\r\n  children,\r\n  icon,\r\n  ...rest\r\n}: ButtonProps) {\r\n  return (\r\n    <button\r\n      className={`inline-flex gap-x-2 items-center rounded-lg border border-gray-200 bg-blue-500 hover:bg-blue-600 px-4 py-2 focus:outline-none focus:border-0 focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 ${className}`}\r\n      {...rest}\r\n    >\r\n      {icon}\r\n      <span className=\"text-white text-md font-medium\">{children}</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  icon?: JSX.Element;\r\n}\r\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SidebarHideItem({ icon, children }: SidebarItemProps) {\r\n  return (\r\n    <>\r\n      {icon}\r\n      <div className=\"hidden sm:flex h-full\">{children}</div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function SidebarItem({ icon, children, ...rest }: SidebarItemProps) {\r\n  return (\r\n    <li className=\"flex flex-col h-10 hover:bg-gray-200 rounded-lg text-base font-semibold text-gray-700\">\r\n      <div className=\"inline-flex h-full m-2 gap-x-2 self-center sm:self-start sm:items-start\">\r\n        <SidebarHideItem icon={icon}>{children}</SidebarHideItem>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport function SidebarLogo({ children, ...rest }: SidebarItemProps) {\r\n  return (\r\n    <div className=\"inline-flex h-12 w-full gap-x-2 justify-center sm:justify-start mt-2 sm:mt-0 ml-0 sm:ml-2\">\r\n      <SidebarHideItem {...rest}>\r\n        <div className=\"text-sm lg:text-base md:mt-1 xl:mt-0 xl:text-2xl font-bold\">\r\n          {children}\r\n        </div>\r\n      </SidebarHideItem>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Sidebar({\r\n  children,\r\n  className,\r\n  icon: logo,\r\n  ...rest\r\n}: SidebarItemProps) {\r\n  return (\r\n    <div className={`flex flex-col ${className}`} {...rest}>\r\n      <div className=\"m-2 md:m-4\">\r\n        {logo}\r\n        <ul className=\"flex flex-col w-full\">{children}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Header({\r\n  className,\r\n  ...rest\r\n}: React.HTMLAttributes<HTMLDivElement>) {\r\n  return (\r\n    <header className={`inline-flex h-16 w-full ${className}`} {...rest} />\r\n  );\r\n}\r\n\r\nexport function Content({\r\n  className,\r\n  ...rest\r\n}: React.HTMLAttributes<HTMLDivElement>) {\r\n  return (\r\n    <div className={`bg-gray-100 w-full h-full overflow-y-auto`}>\r\n      <div className={`m-4 md:m-8 ${className}`} {...rest} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function SidebarLink({ to, ...rest }: SidebarLinkProps) {\r\n  return (\r\n    <Link to={to}>\r\n      <SidebarItem {...rest} />\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport interface SidebarItemProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  icon: React.ReactNode;\r\n}\r\n\r\nexport interface SidebarLinkProps extends SidebarItemProps {\r\n  to: string;\r\n}\r\n","import { SidebarLogo } from \"./components/Layout\";\r\n\r\nexport const logo = (\r\n  <SidebarLogo\r\n    icon={\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"h-8 w-8 text-blue-500\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth={2}\r\n          d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\r\n        />\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth={2}\r\n          d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n        />\r\n      </svg>\r\n    }\r\n  >\r\n    Web Config\r\n  </SidebarLogo>\r\n);\r\n\r\nexport const configIcon = (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-6 w-6\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={2}\r\n      d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 110-4m0 4v2m0-6V4\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const phrasesIcon = (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-6 w-6\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={2}\r\n      d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const removeIcon = (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-4 w-4\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={2}\r\n      d=\"M6 18L18 6M6 6l12 12\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const plusIcon = (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-6 w-6\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={2}\r\n      d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const arrowRightIcon = (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-6 w-6\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={2}\r\n      d=\"M17 8l4 4m0 0l-4 4m4-4H3\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const circleIcon = (\r\n  <svg className=\"h-2 w-2\" viewBox=\"0 0 8 8\" stroke=\"currentColor\">\r\n    <circle cx=\"4\" cy=\"4\" r=\"3\" fill=\"currentColor\" />\r\n  </svg>\r\n);\r\n\r\nexport const documentIcon = (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-6 w-6\"\r\n    fill=\"none\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth={2}\r\n      d=\"M5 8h14M5 8a2 2 0 110-4h14a2 2 0 110 4M5 8v10a2 2 0 002 2h10a2 2 0 002-2V8m-9 4h4\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const downloadIcon = (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-5 w-5\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const trashIcon = (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"h-5 w-5\"\r\n    viewBox=\"0 0 20 20\"\r\n    fill=\"currentColor\"\r\n  >\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>\r\n);\r\n","import * as React from \"react\";\r\nimport { downloadIcon, trashIcon } from \"../icons\";\r\n\r\nexport default function TextField({\r\n  className,\r\n  children,\r\n  onDownload,\r\n  onDelete,\r\n  ...rest\r\n}: TextFieldProps) {\r\n  return (\r\n    <div className=\"w-full rounded-lg text-white bg-black p-2\">\r\n      <textarea\r\n        className={`w-full bg-black font-mono resize-none ${className ?? \"\"}`}\r\n        {...rest}\r\n      >\r\n        {children}\r\n      </textarea>\r\n      <div className=\"inline-flex\">\r\n        <button\r\n          className=\"opacity-50 hover:opacity-100 animate-pulse\"\r\n          onClick={onDownload}\r\n        >\r\n          {downloadIcon}\r\n        </button>\r\n        <button\r\n          className=\"opacity-50 hover:opacity-100 hover:text-red-500\"\r\n          onClick={onDelete}\r\n        >\r\n          {trashIcon}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport interface TextFieldProps\r\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\r\n  onDownload?: () => Promise<any>;\r\n  onDelete?: () => Promise<any>;\r\n}\r\n","import * as React from \"react\";\r\n\r\nexport function PageTitle({\r\n  children,\r\n  ...rest\r\n}: React.HTMLAttributes<HTMLHeadingElement>) {\r\n  return (\r\n    <h1 className=\"text-3xl text-gray-800 font-bold mb-2 lg:mb-4\" {...rest}>\r\n      {children}\r\n    </h1>\r\n  );\r\n}\r\n\r\nexport default function Page({ title, children, ...rest }: PageProps) {\r\n  return (\r\n    <div {...rest}>\r\n      <PageTitle>{title}</PageTitle>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport interface PageProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  title: string;\r\n}\r\n","import useFetcher from \"../lib/useFetcher\";\r\nimport TextField from \"./TextField\";\r\nimport Page, { PageProps } from \"./Page\";\r\nimport { apiUrl } from \"../App\";\r\n\r\nexport default function LogsPage({ children, ...rest }: PageProps) {\r\n  const { data: logsData } = useFetcher<Logs>(`${apiUrl}/logs`, {\r\n    refreshInterval: 5000,\r\n  });\r\n\r\n  const handleDelete = () => fetch(`${apiUrl}/logs`, { method: \"DELETE\" });\r\n\r\n  const handleDownload = async () => {\r\n    if (!logsData) return;\r\n\r\n    const fileLink = document.createElement(\"a\");\r\n    const url = window.URL.createObjectURL(new Blob([logsData.text]));\r\n    fileLink.href = url;\r\n    fileLink.setAttribute(\"download\", \"logs.txt\");\r\n    fileLink.click();\r\n    fileLink.parentNode?.removeChild(fileLink);\r\n  };\r\n\r\n  return (\r\n    <Page {...rest}>\r\n      <TextField\r\n        className=\"outline-none\"\r\n        value={logsData?.text}\r\n        readOnly={true}\r\n        rows={32}\r\n        onDelete={handleDelete}\r\n        onDownload={handleDownload}\r\n      />\r\n      {children}\r\n    </Page>\r\n  );\r\n}\r\n\r\ntype Logs = {\r\n  text: string;\r\n};\r\n","export default function LoadingScreen() {\r\n  return (\r\n    <div className=\"flex w-full h-screen justify-center items-center\">\r\n      <span className=\"animate-spin\">\r\n        {\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"h-24 w-24 text-blue-500\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"\r\n            />\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n            />\r\n          </svg>\r\n        }\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\n\r\nconst Input = React.forwardRef<\r\n  HTMLInputElement,\r\n  React.InputHTMLAttributes<HTMLInputElement>\r\n>((props, ref) => (\r\n  <input\r\n    className={\r\n      \"rounded-lg border border-gray-200 py-1 px-2 focus:outline-none focus:border-gray-400\"\r\n    }\r\n    {...props}\r\n    ref={ref}\r\n  />\r\n));\r\n\r\nexport default Input;\r\n","import * as React from \"react\";\r\nimport { arrowRightIcon } from \"../icons\";\r\nimport Input from \"./Input\";\r\nimport {\r\n  AppendButton,\r\n  AppendButtonProps,\r\n  RemoveButton,\r\n  RemoveButtonProps,\r\n} from \"./SchemaPage\";\r\n\r\nconst DictInput = ({\r\n  removeButtonProps,\r\n  appendButtonProps,\r\n  onChange,\r\n  defaultValue,\r\n}: DictInputProps) => {\r\n  const [values, setValues] = React.useState<any[][]>(\r\n    defaultValue ? Object.entries(defaultValue) : []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    const object: Record<string, any> = {};\r\n\r\n    for (const pair of values) {\r\n      const [key, value] = pair;\r\n      if (key !== undefined && value !== undefined) object[key] = value;\r\n    }\r\n\r\n    onChange(object);\r\n  }, [values]);\r\n\r\n  const changePair = (pairIndex: number, valueIndex: number, value: any) =>\r\n    setValues((v) => {\r\n      const valuesCopy = [...v];\r\n      valuesCopy[pairIndex][valueIndex] = value;\r\n      return valuesCopy;\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {values.map((pair, index) => (\r\n        <RemoveButton\r\n          {...removeButtonProps}\r\n          remove={() =>\r\n            setValues((v) => {\r\n              const valuesCopy = [...v];\r\n              valuesCopy.splice(index, 1);\r\n              return valuesCopy;\r\n            })\r\n          }\r\n          key={index}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            defaultValue={pair[0]}\r\n            onChange={(e) => changePair(index, 0, e.target.value)}\r\n          />\r\n          <span className=\"text-gray-500 self-center\">{arrowRightIcon}</span>\r\n          <Input\r\n            defaultValue={pair[1]}\r\n            onChange={(e) => changePair(index, 1, e.target.value)}\r\n          />\r\n        </RemoveButton>\r\n      ))}\r\n      <AppendButton\r\n        {...appendButtonProps}\r\n        append={() => setValues((v) => [...v, Array(2)])}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.forwardRef<HTMLDivElement, DictInputProps>(DictInput);\r\n\r\nexport interface DictInputProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  onChange: (...args: any) => any;\r\n  removeButtonProps: Omit<RemoveButtonProps, \"remove\">;\r\n  appendButtonProps: Omit<AppendButtonProps, \"append\">;\r\n}\r\n","import * as React from \"react\";\r\nimport Input from \"../components/Input\";\r\nimport Page, { PageProps } from \"./Page\";\r\nimport { ConfigProperty } from \"../lib/configTypes\";\r\nimport {\r\n  useForm,\r\n  useFieldArray,\r\n  UseFieldArrayProps,\r\n  UseFormRegister,\r\n  Controller,\r\n} from \"react-hook-form\";\r\nimport { removeIcon, plusIcon } from \"../icons\";\r\nimport DictInput from \"./DictInput\";\r\n\r\nconst plainInputTypes: Record<string, string> = {\r\n  string: \"text\",\r\n  integer: \"number\",\r\n  number: \"number\",\r\n  boolean: \"checkbox\",\r\n};\r\n\r\nexport function Field({\r\n  title,\r\n  children,\r\n  ...rest\r\n}: React.HTMLAttributes<HTMLDivElement>) {\r\n  return (\r\n    <div className=\"flex flex-col gap-y-1\" {...rest}>\r\n      <h3 className=\"text-lg font-semibold text-gray-700\">{title}</h3>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function RemoveButton({\r\n  remove,\r\n  buttonClassName,\r\n  children,\r\n  ...rest\r\n}: RemoveButtonProps) {\r\n  return (\r\n    <div className=\"inline-flex gap-x-1\" {...rest}>\r\n      {children}\r\n      <button className={buttonClassName} type=\"button\" onClick={remove}>\r\n        {removeIcon}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function AppendButton({\r\n  buttonClassName,\r\n  append,\r\n  ...rest\r\n}: AppendButtonProps) {\r\n  return (\r\n    <div {...rest}>\r\n      <button className={buttonClassName} type=\"button\" onClick={append}>\r\n        {plusIcon}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ArrayField({\r\n  useFieldArrayProps,\r\n  register,\r\n  schemaProperty: property,\r\n  appendButtonProps,\r\n  removeButtonProps,\r\n  ...rest\r\n}: ArrayFieldProps) {\r\n  const { fields, append, remove } = useFieldArray(useFieldArrayProps);\r\n\r\n  React.useEffect(() => {\r\n    if (property.value?.length) append(property.value, { shouldFocus: false });\r\n  }, []);\r\n\r\n  return (\r\n    <Field {...rest}>\r\n      {fields.map((field, fieldIndex) => (\r\n        <RemoveButton\r\n          {...removeButtonProps}\r\n          remove={() => remove(fieldIndex)}\r\n          key={field.id}\r\n        >\r\n          <Input\r\n            {...register(`${useFieldArrayProps.name}[${fieldIndex}]`, {\r\n              required: true,\r\n            })}\r\n          />\r\n        </RemoveButton>\r\n      ))}\r\n      <AppendButton {...appendButtonProps} append={() => append(\"\")} />\r\n    </Field>\r\n  );\r\n}\r\n\r\nexport function ObjectField({\r\n  useFieldArrayProps,\r\n  schemaProperty: property,\r\n  removeButtonProps,\r\n  appendButtonProps,\r\n  ...rest\r\n}: ArrayFieldProps) {\r\n  return (\r\n    <Field {...rest}>\r\n      <Controller\r\n        {...useFieldArrayProps}\r\n        render={({ field }) => (\r\n          <DictInput\r\n            {...field}\r\n            removeButtonProps={removeButtonProps}\r\n            appendButtonProps={appendButtonProps}\r\n            defaultValue={property.value}\r\n          />\r\n        )}\r\n        defaultValue={{}}\r\n      />\r\n    </Field>\r\n  );\r\n}\r\n\r\nexport function NestedObjectField({\r\n  schemaProperty,\r\n  ...rest\r\n}: ArrayFieldProps) {\r\n  if (schemaProperty.type === \"array\")\r\n    return <ArrayField schemaProperty={schemaProperty} {...rest} />;\r\n\r\n  if (schemaProperty.type === \"object\")\r\n    return <ObjectField schemaProperty={schemaProperty} {...rest} />;\r\n\r\n  return null;\r\n}\r\n\r\nexport default function SchemaPage({\r\n  schema,\r\n  formProps,\r\n  children,\r\n  onSave,\r\n  ...rest\r\n}: SchemaPageProps) {\r\n  const { control, register, handleSubmit } = useForm();\r\n\r\n  return (\r\n    <Page {...rest}>\r\n      <form onSubmit={handleSubmit(onSave)} {...formProps}>\r\n        {Object.entries(schema).map((entry, index) => {\r\n          const [name, property] = entry;\r\n\r\n          if (property.type in plainInputTypes) {\r\n            const plainType = plainInputTypes[property.type];\r\n\r\n            return (\r\n              <Field title={property.title}>\r\n                <Input\r\n                  type={plainType}\r\n                  placeholder={property.default?.toString()}\r\n                  defaultValue={\r\n                    plainType === \"checkbox\"\r\n                      ? (undefined as any)\r\n                      : property.value\r\n                  }\r\n                  defaultChecked={property.value}\r\n                  {...register(name, {\r\n                    required: !property.default && plainType !== \"checkbox\",\r\n                    valueAsNumber: plainType === \"number\",\r\n                  })}\r\n                  key={index}\r\n                />\r\n              </Field>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <NestedObjectField\r\n              title={property.title}\r\n              useFieldArrayProps={{ control, name }}\r\n              register={register}\r\n              schemaProperty={property}\r\n              removeButtonProps={{\r\n                buttonClassName: \"text-gray-500 hover:text-red-500\",\r\n              }}\r\n              appendButtonProps={{\r\n                buttonClassName: \"text-gray-500 hover:bg-gray-200 rounded-lg\",\r\n              }}\r\n              key={index}\r\n            />\r\n          );\r\n        })}\r\n        <div>{children}</div>\r\n      </form>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport type SchemaProperty = ConfigProperty & {\r\n  value?: string | any | any[];\r\n};\r\n\r\nexport interface SchemaPageProps extends PageProps {\r\n  schema: Record<string, SchemaProperty>;\r\n  onSave: (data: Record<string, any>) => any;\r\n  formProps?: Record<string, any>;\r\n}\r\n\r\nexport interface ButtonProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  buttonClassName?: string;\r\n}\r\n\r\nexport interface RemoveButtonProps extends ButtonProps {\r\n  remove: (...args: any) => any;\r\n}\r\n\r\nexport interface AppendButtonProps extends ButtonProps {\r\n  append: (...args: any) => any;\r\n}\r\n\r\nexport interface ArrayFieldProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  useFieldArrayProps: UseFieldArrayProps;\r\n  register: UseFormRegister<Record<string, string>>;\r\n  schemaProperty: SchemaProperty;\r\n  removeButtonProps: ButtonProps;\r\n  appendButtonProps: ButtonProps;\r\n}\r\n","import * as React from \"react\";\r\nimport Button, { ButtonProps } from \"./Button\";\r\n\r\nexport default function Dropdown({\r\n  children,\r\n  buttonProps,\r\n  mirror,\r\n  ...rest\r\n}: DropdownProps) {\r\n  const [menuVisible, setMenuVisible] = React.useState<boolean>(false);\r\n  const menuRef = React.useRef<HTMLUListElement>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (menuVisible)\r\n      return document.addEventListener(\"click\", closeMenu as any);\r\n\r\n    document.removeEventListener(\"click\", closeMenu as any);\r\n  }, [menuVisible]);\r\n\r\n  const toggleMenu: React.MouseEventHandler<HTMLButtonElement> = (e) => {\r\n    e.preventDefault();\r\n    setMenuVisible((visible) => !visible);\r\n  };\r\n\r\n  const closeMenu = (e: React.MouseEvent, itemClick: boolean = false) => {\r\n    if (menuRef.current?.contains(e.target as Node) && !itemClick) return;\r\n    setMenuVisible(false);\r\n  };\r\n\r\n  const transform = mirror ? \"scaleX(-1)\" : \"scaleX(1)\";\r\n\r\n  return (\r\n    <ul {...rest} ref={menuRef} style={{ transform: transform }}>\r\n      <Button\r\n        onClick={toggleMenu}\r\n        {...buttonProps}\r\n        style={{ transform: transform }}\r\n      />\r\n      {menuVisible && (\r\n        <div\r\n          className=\"flex flex-col fixed w-full bg-white shadow-md z-50\"\r\n          style={{ transform: transform }}\r\n        >\r\n          {children.map((child, childIndex) => (\r\n            <div\r\n              className=\"w-full h-full\"\r\n              onClick={(e) => closeMenu(e, true)}\r\n              key={childIndex.toString()}\r\n            >\r\n              {child}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport function DropdownItem({\r\n  className,\r\n  disabled,\r\n  ...rest\r\n}: DropdownItemProps) {\r\n  const itemClassName = disabled\r\n    ? \"bg-gray-100 cursor-not-allowed opacity-50 pointer-events-hover\"\r\n    : \"hover:bg-gray-100 cursor-pointer\";\r\n\r\n  return (\r\n    <li\r\n      className={`w-full h-full text-sm py-1 px-2 ${itemClassName} ${className}`}\r\n      {...rest}\r\n    />\r\n  );\r\n}\r\n\r\nexport interface DropdownProps extends React.HTMLAttributes<HTMLUListElement> {\r\n  children: React.ReactChild[];\r\n  buttonProps: ButtonProps;\r\n  mirror?: boolean;\r\n}\r\n\r\nexport interface DropdownItemProps extends React.HTMLAttributes<HTMLLIElement> {\r\n  disabled?: boolean;\r\n}\r\n","import React from \"react\";\r\nimport useFetcher from \"./lib/useFetcher\";\r\nimport Button from \"./components/Button\";\r\nimport LogsPage from \"./components/LogsPage\";\r\nimport LoadingScreen from \"./components/LoadingScreen\";\r\nimport SchemaPage, { SchemaProperty } from \"./components/SchemaPage\";\r\nimport Dropdown, { DropdownItem } from \"./components/Dropdown\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { ConfigSchema } from \"./lib/configTypes\";\r\nimport { Sidebar, Header, Content, SidebarLink } from \"./components/Layout\";\r\nimport {\r\n  logo,\r\n  configIcon,\r\n  phrasesIcon,\r\n  circleIcon,\r\n  documentIcon,\r\n} from \"./icons\";\r\n\r\nexport const apiUrl = \"http://localhost:5000/api\";\r\n\r\nconst pageIcons: Record<string, JSX.Element> = {\r\n  config: configIcon,\r\n  phrases: phrasesIcon,\r\n};\r\n\r\nenum BotState {\r\n  ready = \"ready\",\r\n  loading = \"loading\",\r\n  stopped = \"stopped\",\r\n}\r\n\r\ntype BotStatus = {\r\n  id: number;\r\n  status: BotState;\r\n};\r\n\r\nconst botStateColors = {\r\n  ready: \"text-green-400\",\r\n  loading: \"text-yellow-400\",\r\n  stopped: \"text-red-400\",\r\n};\r\n\r\nexport default function App() {\r\n  const { data: configSchema } = useFetcher<ConfigSchema>(`${apiUrl}/schema`);\r\n  const { data: configData, mutate: mutateConfigData } = useFetcher<\r\n    Record<string, any>\r\n  >(`${apiUrl}/config`);\r\n  const { data: phrasesData, mutate: mutatePhrasesData } = useFetcher<\r\n    Record<string, string>\r\n  >(`${apiUrl}/phrases`);\r\n  const { data: botStatus, mutate: mutateBotStatus } = useFetcher<BotStatus>(\r\n    `${apiUrl}/bot`\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    const eventSource = new EventSource(`${apiUrl}/bot/status`);\r\n\r\n    eventSource.addEventListener(\"update\", (e) => {\r\n      const data: BotStatus = JSON.parse((e as MessageEvent).data);\r\n      if (botStatus?.id !== data.id && data.status === BotState.stopped) return;\r\n      mutateBotStatus(data);\r\n    });\r\n\r\n    eventSource.addEventListener(\"error\", () => eventSource.close());\r\n\r\n    return () => eventSource.close();\r\n  }, []);\r\n\r\n  if (!(configSchema && configData && phrasesData && botStatus))\r\n    return <LoadingScreen />;\r\n\r\n  return (\r\n    <div className=\"App flex flex-row w-full h-screen\">\r\n      <Sidebar className=\"w-2/12 h-screen border-r border-gray-200\" icon={logo}>\r\n        {Object.entries(configSchema.properties).map((entry, index) => {\r\n          const [name, property] = entry;\r\n\r\n          return (\r\n            <SidebarLink to={`/${name}`} icon={pageIcons[name]} key={index}>\r\n              {property.title}\r\n            </SidebarLink>\r\n          );\r\n        })}\r\n        <SidebarLink to=\"/logs\" icon={documentIcon}>\r\n          {phrasesData.logs}\r\n        </SidebarLink>\r\n      </Sidebar>\r\n\r\n      <div className=\"flex flex-col w-10/12 h-full\">\r\n        <Header className=\"shadow z-10 px-2 py-3 items-center justify-center md:justify-end\">\r\n          <Dropdown\r\n            className=\"inline-block\"\r\n            buttonProps={{\r\n              children: phrasesData.bot,\r\n              icon: (\r\n                <span className={botStateColors[botStatus.status]}>\r\n                  {circleIcon}\r\n                </span>\r\n              ),\r\n            }}\r\n            mirror\r\n          >\r\n            <DropdownItem\r\n              onClick={async () =>\r\n                await fetch(apiUrl + \"/bot/start\", { method: \"POST\" })\r\n              }\r\n              disabled={botStatus.status !== BotState.stopped}\r\n            >\r\n              {phrasesData.bot_start}\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              onClick={async () =>\r\n                await fetch(apiUrl + \"/bot/restart\", { method: \"POST\" })\r\n              }\r\n              disabled={botStatus.status !== BotState.ready}\r\n            >\r\n              {phrasesData.bot_reload}\r\n            </DropdownItem>\r\n            <DropdownItem\r\n              onClick={async () =>\r\n                await fetch(apiUrl + \"/bot/stop\", { method: \"POST\" })\r\n              }\r\n              disabled={botStatus.status !== BotState.ready}\r\n            >\r\n              {phrasesData.bot_kill}\r\n            </DropdownItem>\r\n          </Dropdown>\r\n        </Header>\r\n\r\n        <Content>\r\n          <Switch>\r\n            {Object.entries(configSchema.properties).map((entry, index) => {\r\n              const [name, property] = entry;\r\n              const nameCapital = name.charAt(0).toUpperCase() + name.slice(1);\r\n              const schema = configSchema.definitions[nameCapital].properties;\r\n              const data = nameCapital === \"Config\" ? configData : phrasesData;\r\n\r\n              for (const key of Object.keys(schema)) {\r\n                const dataValue = data[key];\r\n\r\n                if (dataValue !== undefined)\r\n                  (schema[key] as SchemaProperty).value = dataValue;\r\n              }\r\n\r\n              const handleSave = async (inputData: Record<string, any>) => {\r\n                const r = await fetch(`${apiUrl}/${name}`, {\r\n                  method: \"POST\",\r\n                  body: JSON.stringify(inputData),\r\n                  headers: { \"Content-Type\": \"application/json\" },\r\n                });\r\n\r\n                if (r.status === 422) {\r\n                  const json = await r.json();\r\n                  const errorMessage = json.detail[0]?.msg;\r\n\r\n                  return alert(\r\n                    errorMessage\r\n                      ? phrasesData.config_error_alert + `: ${errorMessage}`\r\n                      : phrasesData.config_error_alert\r\n                  );\r\n                }\r\n\r\n                if (nameCapital === \"Config\") mutateConfigData(inputData);\r\n                else if (nameCapital === \"Phrases\")\r\n                  mutatePhrasesData(inputData);\r\n              };\r\n\r\n              return (\r\n                <Route path={`/${name}`} key={index}>\r\n                  <SchemaPage\r\n                    className=\"flex flex-col max-w-2xl\"\r\n                    formProps={{ className: \"flex flex-col gap-y-4\" }}\r\n                    title={property.title}\r\n                    schema={schema}\r\n                    onSave={handleSave}\r\n                  >\r\n                    <Button className=\"float-right\" type=\"submit\">\r\n                      {phrasesData.save}\r\n                    </Button>\r\n                  </SchemaPage>\r\n                </Route>\r\n              );\r\n            })}\r\n            <Route path=\"/logs\">\r\n              <LogsPage title={phrasesData.logs} />\r\n            </Route>\r\n          </Switch>\r\n        </Content>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./css/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}